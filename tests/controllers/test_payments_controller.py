# -*- coding: utf-8 -*-

"""
akoyaapisv240

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

import json

from tests.controllers.controller_test_base import ControllerTestBase
from apimatic_core.utilities.comparison_helper import ComparisonHelper
from akoyaapisv240.api_helper import APIHelper


class PaymentsControllerTests(ControllerTestBase):

    controller = None

    @classmethod
    def setUpClass(cls):
        super(PaymentsControllerTests, cls).setUpClass()
        cls.controller = cls.client.payments
        cls.response_catcher = cls.controller.http_call_back

    # This product supports use cases such as payment enablement or account opening. The response includes identifiers necessary to make ACH and RTP payments. Identifiers include account number, routing number, identifier type (actual or tokenized account number), and payment network type such as ACH or RTP.
    #
    #<br>
    #
    #To see the response schema, select the `200` response below. For an example payload response, see the `200` example response below the *Try it* feature. 
    #
    #> ðŸ›‘
    #> 
    #> The *id_token* should be used as the bearer token with this call.
    def test_payment_networks(self):
        # Parameters for the API call
        version = 'v2'
        provider_id = 'mikomo'
        account_id = ':accountId'
        x_akoya_interaction_type = None

        # Perform the API call through the SDK function
        result = self.controller.payment_networks(version, provider_id, account_id, x_akoya_interaction_type)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['x-akoya-interaction-id'] = None
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"paymentNetworks":[{"bankId":"125000024","identifier":"4549922100'
            '71","identifierType":"ACCOUNT_NUMBER","type":"US_ACH","transferIn"'
            ':true,"transferOut":true}]}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

