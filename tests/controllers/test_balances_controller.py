# -*- coding: utf-8 -*-

"""
akoyaapisv240

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

import json

from tests.controllers.controller_test_base import ControllerTestBase
from apimatic_core.utilities.comparison_helper import ComparisonHelper
from akoyaapisv240.api_helper import APIHelper


class BalancesControllerTests(ControllerTestBase):

    controller = None

    @classmethod
    def setUpClass(cls):
        super(BalancesControllerTests, cls).setUpClass()
        cls.controller = cls.client.balances
        cls.response_catcher = cls.controller.http_call_back

    # Account information that includes balances and rates of bank accounts, credit cards, loans, investments, and more.
    #
    #To view the response schema, select the `200` response below. Then pick an option for annuity, deposit, insurance, investment, loan, and line of credit account types. 
    #
    #For an example payload response, see the `200` example response below the `Try it` feature. The example is from a deposit account but all account types are supported by this endpoint.
    #
    #> ðŸ›‘
    #> 
    #> The *id_token* should be used as the bearer token with this call.
    #
    #Use the `mode` query param to receive FDX-aligned, standardized data values (Beta). For example:
    #
    #`https://sandbox-products.ddp.akoya.com/balances/v2/mikomo?mode=standard`
    #
    #`mode` is available in both sandbox and production.
    #
    #`mode` is supported by a subset of providers. Log into the [Data Recipient Hub](https://recipient.ddp.akoya.com/login) and click [here](https://recipient.ddp.akoya.com/support/article/kA0Uw00000015GzKAI) to view a list of all providers supporting the `mode` parameter.
    def test_get_balances(self):
        # Parameters for the API call
        version = 'v2'
        provider_id = 'mikomo'
        x_akoya_interaction_type = None
        mode = 'raw'

        # Perform the API call through the SDK function
        result = self.controller.get_balances(version, provider_id, x_akoya_interaction_type, mode)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['x-akoya-interaction-id'] = None
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"accounts":[{"investmentAccount":{"accountId":"839502593","accoun'
            'tType":"College Savings","availableCashBalance":0,"balanceAsOf":"2'
            '022-03-16T04:00:00Z","balanceType":"ASSET","currency":{"currencyCo'
            'de":"USD"},"currentValue":52672.49,"marginBalance":0,"nickname":"5'
            '29 for Kid"}},{"investmentAccount":{"accountId":"5426873","account'
            'NumberDisplay":"...7054","accountType":"BROKERAGE","allowedCheckWr'
            'iting":false,"availableCashBalance":0,"balanceList":[{"balanceDate'
            '":"2021-07-06","balanceDescription":"Margin Call","balanceName":"M'
            'ARGINCALL","balanceType":"AMOUNT","balanceValue":0,"currency":{"cu'
            'rrencyCode":"USD"}},{"balanceDate":"2021-07-06","balanceDescriptio'
            'n":"Fed Call","balanceName":"FEDCALL","balanceType":"AMOUNT","bala'
            'nceValue":0,"currency":{"currencyCode":"USD"}},{"balanceDate":"202'
            '1-07-06","balanceDescription":"Intra Day","balanceName":"INTRADAY"'
            ',"balanceType":"AMOUNT","balanceValue":0,"currency":{"currencyCode'
            '":"USD"}},{"balanceDate":"2021-07-05","balanceDescription":"Prior '
            'Day","balanceName":"PRIORDAY","balanceType":"AMOUNT","balanceValue'
            '":0,"currency":{"currencyCode":"USD"}}],"currency":{"currencyCode"'
            ':"USD"},"lastActivityDate":"2021-07-06T00:00:00Z","margin":false,"'
            'marginBalance":0,"nickname":"Self-Directed","shortBalance":0,"stat'
            'us":"OPEN","transactionsIncluded":false}},{"depositAccount":{"acco'
            'untId":"g833202fb0866d0ad83472c429","accountNumberDisplay":"xxxxxx'
            'xx0071","accountType":"CHECKING","availableBalance":106717.06,"bal'
            'anceAsOf":"2022-04-24T14:15:22Z","balanceType":"ASSET","currency":'
            '{"currencyCode":"USD"},"currentBalance":106717.06,"description":"C'
            'hecking Plus","fiAttributes":[{"name":"accountOpenedDate","value":'
            '"2020-04-23"},{"name":"interestPaidLastYear","value":"3.20"}],"int'
            'erestRate":0.0125,"interestRateAsOf":"2022-04-24T14:15:22Z","inter'
            'estRateType":"FIXED","interestYtd":20.33,"lastActivityDate":"2022-'
            '04-24T14:15:22Z","lineOfBusiness":"Personal","nickname":"Nickname '
            'Checking Plus 0071","productName":"Checking Plus","status":"OPEN",'
            '"transferIn":true,"transferOut":true}},{"depositAccount":{"account'
            'Id":"5dbda8de96eeff05f23934523a1fc258","accountNumberDisplay":"xxx'
            'x0134","accountType":"CHECKING","annualPercentageYield":0,"availab'
            'leBalance":0,"balanceAsOf":"2022-04-24T14:15:22Z","currency":{"cur'
            'rencyCode":"USD"},"currentBalance":0,"description":"Virtual Wallet'
            ' Student Reserve","interestRateAsOf":"2022-04-24T14:15:22Z","inter'
            'estRateType":"FIXED","lastActivityDate":"2022-04-01T10:05:00Z","li'
            'neOfBusiness":"LBRB","openingDayBalance":0,"productName":"Virtual '
            'Wallet Student Reserve","transactionsIncluded":false}},{"depositAc'
            'count":{"accountId":"11719ae5-2399-1278-e43c-43f24abb3058","accoun'
            'tType":"CD","annualPercentageYield":0.75,"availableBalance":6808.2'
            '9,"balanceAsOf":"2021-04-07T10:20:43.276Z","balanceType":"ASSET","'
            'currency":{"currencyCode":"USD","originalCurrencyCode":"USD"},"cur'
            'rentBalance":6808.29,"description":"Certificate of Deposit","fiAtt'
            'ributes":[{"name":"eStatements","value":"False"},{"name":"interest'
            'PaidLastYear","value":"50.72"},{"name":"isTransactionsSupported","'
            'value":"False"},{"name":"issueDate","value":"2019-03-21T00:00:00.0'
            '00Z"},{"name":"interestPayoutFrequency","value":"Semi-Annually (An'
            'd At Maturity)"}],"interestRate":0.75,"interestYtd":25.24,"lineOfB'
            'usiness":"CONSUMER","maturityDate":"2024-03-21T00:00:00Z","nicknam'
            'e":"Certificate of Deposit - 3691","openingDayBalance":2000,"paren'
            'tAccountId":"11719ae5-2399-1278-e43c-43f24abb3058","status":"OPEN"'
            ',"term":60,"transactionsIncluded":false,"transferIn":false,"transf'
            'erOut":false}},{"depositAccount":{"accountId":"33fbd9e5-9cc3-3d7d-'
            '15b3-70d97d87ca1d","accountType":"SAVINGS","availableBalance":2060'
            '8.9,"balanceAsOf":"2021-04-07T10:08:11.833Z","balanceType":"ASSET"'
            ',"currency":{"currencyCode":"USD","originalCurrencyCode":"USD"},"c'
            'urrentBalance":20608.9,"description":"Savings","fiAttributes":[{"n'
            'ame":"eStatements","value":"True"}],"interestRate":0.01,"interestY'
            'td":0.29,"lineOfBusiness":"CONSUMER","nickname":"Savings - 8537","'
            'openingDayBalance":20608.9,"parentAccountId":"33fbd9e5-9cc3-3d7d-1'
            '5b3-70d97d87ca1d","status":"OPEN","transactionsIncluded":false}}]}'
            '')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

    # Account information that includes balances and rates of bank accounts, credit cards, loans, investments, and more.
    #
    #To view the response schema, select the `200` response below. Then pick an option for annuity, deposit, insurance, investment, loan, and line of credit account types. 
    #
    #For an example payload response, see the `200` example response below the `Try it` feature. The example is from a deposit account but all account types are supported by this endpoint.
    #
    #> ðŸ›‘
    #> 
    #> The *id_token* should be used as the bearer token with this call.
    #
    #Use the `mode` query param to receive FDX-aligned, standardized data values (Beta). For example:
    #
    #`https://sandbox-products.ddp.akoya.com/balances/v2/mikomo?mode=standard`
    #
    #`mode` is available in both sandbox and production.
    #
    #`mode` is supported by a subset of providers. Log into the [Data Recipient Hub](https://recipient.ddp.akoya.com/login) and click [here](https://recipient.ddp.akoya.com/support/article/kA0Uw00000015GzKAI) to view a list of all providers supporting the `mode` parameter.
    def test_get_balances_1(self):
        # Parameters for the API call
        version = 'v2'
        provider_id = 'mikomo'
        x_akoya_interaction_type = None
        mode = 'raw'

        # Perform the API call through the SDK function
        result = self.controller.get_balances(version, provider_id, x_akoya_interaction_type, mode)

        # Test response code
        assert self.response_catcher.response.status_code == 206

        # Test headers
        expected_headers = {}
        expected_headers['x-akoya-interaction-id'] = None
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"accounts":[{"investmentAccount":{"accountId":"839502593","accoun'
            'tType":"College Savings","availableCashBalance":0,"balanceAsOf":"2'
            '022-03-16T04:00:00Z","balanceType":"ASSET","currency":{"currencyCo'
            'de":"USD"},"currentValue":52672.49,"marginBalance":0,"nickname":"5'
            '29 for Kid"}},{"depositAccount":{"error":{"code":704,"message":"Ac'
            'count type not supported"}}}]}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

