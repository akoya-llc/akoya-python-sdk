# -*- coding: utf-8 -*-

"""
akoyaapisv240

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

import json

from tests.controllers.controller_test_base import ControllerTestBase
from apimatic_core.utilities.comparison_helper import ComparisonHelper
from akoyaapisv240.api_helper import APIHelper


class InvestmentsControllerTests(ControllerTestBase):

    controller = None

    @classmethod
    def setUpClass(cls):
        super(InvestmentsControllerTests, cls).setUpClass()
        cls.controller = cls.client.investments
        cls.response_catcher = cls.controller.http_call_back

    # Get detailed account information that includes Akoya products Account Info and Balances for all account types (annunity, deposit, insurance, investments, line of credit, and loan) and adds the Investments product to investment accounts including contributions, holdings, vesting information, and more.
    #
    #To view the response schema, select the `200` response below. Then pick an option for annuity, deposit, insurance, investment, loan, and line of credit account types. 
    #
    #For an example payload response, see the `200` example response below the `Try it` feature. The example is from an investment account but all account types are supported and returned by this endpoint.
    #
    #> ðŸ›‘
    #> 
    #> The *id_token* should be used as the bearer token with this call.
    #
    #Use the `mode` query param to receive FDX-aligned, standardized data values (Beta). For example:
    #
    #`https://sandbox-products.ddp.akoya.com/accounts/v2/mikomo?mode=standard`
    #
    #`mode` is available in both sandbox and production.
    #
    #`mode` is supported by a subset of providers. Log into the [Data Recipient Hub](https://recipient.ddp.akoya.com/login) and click [here](https://recipient.ddp.akoya.com/support/article/kA0Uw00000015GzKAI) to view a list of all providers supporting the `mode` parameter.
    def test_get_accounts(self):
        # Parameters for the API call
        version = 'v2'
        provider_id = 'mikomo'
        x_akoya_interaction_type = None
        mode = 'raw'

        # Perform the API call through the SDK function
        result = self.controller.get_accounts(version, provider_id, x_akoya_interaction_type, mode)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['x-akoya-interaction-id'] = None
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"accounts":[{"investmentAccount":{"accountId":"839502593","accoun'
            'tType":"College Savings","availableCashBalance":0,"balanceAsOf":"2'
            '022-03-16T04:00:00Z","balanceType":"ASSET","currency":{"currencyCo'
            'de":"USD"},"currentValue":52672.49,"holdings":[{"assetClasses":[{"'
            'assetClass":"DOMESTICBOND","percent":0}],"cashAccount":false,"mark'
            'etValue":52672.49,"mutualFundSecurity":{"mutualFundType":"OPENEND"'
            ',"reinvestCapitalGains":true,"reinvestDividends":true,"unitsStreet'
            '":0,"unitsUser":0,"yield":0,"yieldAsOfDate":"2019-08-24T14:15:22Z"'
            '},"positionType":"LONG","purchasedPrice":18.42,"securityIdType":"I'
            'SIN","units":2088.521}],"marginBalance":0,"nickname":"529 for Kid"'
            '}},{"investmentAccount":{"accountId":"5426873","accountNumberDispl'
            'ay":"...7054","accountType":"BROKERAGE","allowedCheckWriting":fals'
            'e,"availableCashBalance":0,"balanceList":[{"balanceDate":"2021-07-'
            '06","balanceDescription":"Margin Call","balanceName":"MARGINCALL",'
            '"balanceType":"AMOUNT","balanceValue":0,"currency":{"currencyCode"'
            ':"USD"}},{"balanceDate":"2021-07-06","balanceDescription":"Fed Cal'
            'l","balanceName":"FEDCALL","balanceType":"AMOUNT","balanceValue":0'
            ',"currency":{"currencyCode":"USD"}},{"balanceDate":"2021-07-06","b'
            'alanceDescription":"Intra Day","balanceName":"INTRADAY","balanceTy'
            'pe":"AMOUNT","balanceValue":0,"currency":{"currencyCode":"USD"}},{'
            '"balanceDate":"2021-07-05","balanceDescription":"Prior Day","balan'
            'ceName":"PRIORDAY","balanceType":"AMOUNT","balanceValue":0,"curren'
            'cy":{"currencyCode":"USD"}}],"currency":{"currencyCode":"USD"},"la'
            'stActivityDate":"2021-07-06T00:00:00Z","margin":false,"marginBalan'
            'ce":0,"nickname":"Self-Directed","shortBalance":0,"status":"OPEN",'
            '"transactionsIncluded":false}},{"depositAccount":{"accountId":"g83'
            '3202fb0866d0ad83472c429","accountNumberDisplay":"xxxxxxxx0071","ac'
            'countType":"CHECKING","availableBalance":106717.06,"balanceAsOf":"'
            '2022-04-24T14:15:22Z","balanceType":"ASSET","currency":{"currencyC'
            'ode":"USD"},"currentBalance":106717.06,"description":"Checking Plu'
            's","fiAttributes":[{"name":"accountOpenedDate","value":"2020-04-23'
            '"},{"name":"interestPaidLastYear","value":"3.20"}],"interestRate":'
            '0.0125,"interestRateAsOf":"2022-04-24T14:15:22Z","interestRateType'
            '":"FIXED","interestYtd":20.33,"lastActivityDate":"2022-04-24T14:15'
            ':22Z","lineOfBusiness":"Personal","nickname":"Nickname Checking Pl'
            'us 0071","productName":"Checking Plus","status":"OPEN","transferIn'
            '":true,"transferOut":true}},{"depositAccount":{"accountId":"5dbda8'
            'de96eeff05f23934523a1fc258","accountNumberDisplay":"xxxx0134","acc'
            'ountType":"CHECKING","annualPercentageYield":0,"availableBalance":'
            '0,"balanceAsOf":"2022-04-24T14:15:22Z","currency":{"currencyCode":'
            '"USD"},"currentBalance":0,"description":"Virtual Wallet Student Re'
            'serve","interestRateAsOf":"2022-04-24T14:15:22Z","interestRateType'
            '":"FIXED","lastActivityDate":"2022-04-01T10:05:00Z","lineOfBusines'
            's":"LBRB","openingDayBalance":0,"productName":"Virtual Wallet Stud'
            'ent Reserve","transactionsIncluded":false}},{"depositAccount":{"ac'
            'countId":"11719ae5-2399-1278-e43c-43f24abb3058","accountType":"CD"'
            ',"annualPercentageYield":0.75,"availableBalance":6808.29,"balanceA'
            'sOf":"2021-04-07T10:20:43.276Z","balanceType":"ASSET","currency":{'
            '"currencyCode":"USD","originalCurrencyCode":"USD"},"currentBalance'
            '":6808.29,"description":"Certificate of Deposit","fiAttributes":[{'
            '"name":"eStatements","value":"False"},{"name":"interestPaidLastYea'
            'r","value":"50.72"},{"name":"isTransactionsSupported","value":"Fal'
            'se"},{"name":"issueDate","value":"2019-03-21T00:00:00.000Z"},{"nam'
            'e":"interestPayoutFrequency","value":"Semi-Annually (And At Maturi'
            'ty)"}],"interestRate":0.75,"interestYtd":25.24,"lineOfBusiness":"C'
            'ONSUMER","maturityDate":"2024-03-21T00:00:00Z","nickname":"Certifi'
            'cate of Deposit - 3691","openingDayBalance":2000,"parentAccountId"'
            ':"11719ae5-2399-1278-e43c-43f24abb3058","status":"OPEN","term":60,'
            '"transactionsIncluded":false,"transferIn":false,"transferOut":fals'
            'e}},{"depositAccount":{"accountId":"33fbd9e5-9cc3-3d7d-15b3-70d97d'
            '87ca1d","accountType":"SAVINGS","availableBalance":20608.9,"balanc'
            'eAsOf":"2021-04-07T10:08:11.833Z","balanceType":"ASSET","currency"'
            ':{"currencyCode":"USD","originalCurrencyCode":"USD"},"currentBalan'
            'ce":20608.9,"description":"Savings","fiAttributes":[{"name":"eStat'
            'ements","value":"True"}],"interestRate":0.01,"interestYtd":0.29,"l'
            'ineOfBusiness":"CONSUMER","nickname":"Savings - 8537","openingDayB'
            'alance":20608.9,"parentAccountId":"33fbd9e5-9cc3-3d7d-15b3-70d97d8'
            '7ca1d","status":"OPEN","transactionsIncluded":false}}]}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

    # Get detailed account information that includes Akoya products Account Info and Balances for all account types (annunity, deposit, insurance, investments, line of credit, and loan) and adds the Investments product to investment accounts including contributions, holdings, vesting information, and more.
    #
    #To view the response schema, select the `200` response below. Then pick an option for annuity, deposit, insurance, investment, loan, and line of credit account types. 
    #
    #For an example payload response, see the `200` example response below the `Try it` feature. The example is from an investment account but all account types are supported and returned by this endpoint.
    #
    #> ðŸ›‘
    #> 
    #> The *id_token* should be used as the bearer token with this call.
    #
    #Use the `mode` query param to receive FDX-aligned, standardized data values (Beta). For example:
    #
    #`https://sandbox-products.ddp.akoya.com/accounts/v2/mikomo?mode=standard`
    #
    #`mode` is available in both sandbox and production.
    #
    #`mode` is supported by a subset of providers. Log into the [Data Recipient Hub](https://recipient.ddp.akoya.com/login) and click [here](https://recipient.ddp.akoya.com/support/article/kA0Uw00000015GzKAI) to view a list of all providers supporting the `mode` parameter.
    def test_get_accounts_1(self):
        # Parameters for the API call
        version = 'v2'
        provider_id = 'mikomo'
        x_akoya_interaction_type = None
        mode = 'raw'

        # Perform the API call through the SDK function
        result = self.controller.get_accounts(version, provider_id, x_akoya_interaction_type, mode)

        # Test response code
        assert self.response_catcher.response.status_code == 206

        # Test headers
        expected_headers = {}
        expected_headers['x-akoya-interaction-id'] = None
        expected_headers['content-type'] = 'application/json'

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"accounts":[{"investmentAccount":{"accountId":"839502593","accoun'
            'tType":"College Savings","availableCashBalance":0,"balanceAsOf":"2'
            '022-03-16T04:00:00Z","balanceType":"ASSET","currency":{"currencyCo'
            'de":"USD"},"currentValue":52672.49,"holdings":[{"assetClasses":[{"'
            'assetClass":"DOMESTICBOND","percent":0}],"cashAccount":false,"mark'
            'etValue":52672.49,"mutualFundSecurity":{"mutualFundType":"OPENEND"'
            ',"reinvestCapitalGains":true,"reinvestDividends":true,"unitsStreet'
            '":0,"unitsUser":0,"yield":0,"yieldAsOfDate":"2019-08-24T14:15:22Z"'
            '},"positionType":"LONG","purchasedPrice":18.42,"securityIdType":"I'
            'SIN","units":2088.521}],"marginBalance":0,"nickname":"529 for Kid"'
            '}},{"investmentAccount":{"error":{"code":704,"message":"Account ty'
            'pe not supported"}}}]}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

